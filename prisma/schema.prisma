// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Country {
  id Int @id @default(autoincrement())
  name String @db.VarChar(255) @unique
  refugees Refugees[]
}

model Language {
  id Int @id @default(autoincrement())
  name String @db.VarChar(255) @unique
  refugees  Refugees[]
}

model Owner {
  id Int @id @default(autoincrement())
  auth0_id String @db.VarChar(255) @unique
  email String @db.VarChar(255)
  name String @db.VarChar(255)
  phone String @db.VarChar(255)

  locations Location[]
}

model Provider {
  id Int @id @default(autoincrement())
  auth0_id String @db.VarChar(255) @unique
  email String @db.VarChar(255)
  name String @db.VarChar(255)
  phone String @db.VarChar(255)

  services Service[]
}

model Refugees {
  id Int @default(autoincrement()) @id
  auth0_id String @db.VarChar(255) @unique
  phone String? @db.VarChar(255)
  email String? @db.VarChar(255)
  name String @db.VarChar(255)
  id_country Int
  id_language Int 
  no_adults Int? @default(1)
  no_children Int? @default(0)
  notes String @db.VarChar(255)
  id_loc Int?

  acommodationRequest AccomodationRequest?

  country Country @relation(fields: [id_country], references: [id], onDelete: Cascade)
  language Language @relation(fields: [id_language], references: [id], onDelete: Cascade)
  location Location? @relation(fields: [id_loc], references: [id], onDelete: SetNull)
}

model Location {
  id Int @default(autoincrement())
  name String @db.VarChar(255)
  address String @db.VarChar(255) @unique
  price Int @default(0)
  max_adults Int @default(1)
  max_children Int @default(0)
  id_owner Int

  refugee Refugees?
  owner Owner @relation(fields:[id_owner], references: [id], onDelete: Cascade)
  services Service[]
  @@id([id, id_owner])
}

model Service {
  id Int @default(autoincrement())
  price Int @default(0)
  max_adults Int @default(1)
  max_children Int @default(0)
  id_loc Int
  type Int
  description String @db.VarChar(255)
  id_provider Int

  provider Provider @relation(fields: [id_provider], references: [id], onDelete: Cascade)
  location Location @relation(fields: [id_loc], references: [id], onDelete: Cascade)

  @@id([id, id_loc, type, id_provider])
}

// model Service_proposal {
//   id Int @default(autoincrement())
//   id_provider Int
//   id_service Int
//   id_loc Int
//   approved Int @default(0)

//   @@id([id, id_provider, id_service])
  
// }

model AccomodationRequest {
  id Int @default(autoincrement())
  id_refugee Int
  approved Int @default(0)

  refugee Refugees @relation(fields: [id_refugee], references: [id], onDelete: Cascade)
  @@id([id, id_refugee])
}

